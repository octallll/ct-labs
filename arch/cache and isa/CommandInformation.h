/**
    ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
    ░░░░░░░░░░▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄░░░░░░░░░
    ░░░░░░░░▄▀░░░░░░░░░░░░▄░░░░░░░▀▄░░░░░░░
    ░░░░░░░░█░░▄░░░░▄░░░░░░░░░░░░░░█░░░░░░░
    ░░░░░░░░█░░░░░░░░░░░░▄█▄▄░░▄░░░█░▄▄▄░░░
    ░▄▄▄▄▄░░█░░░░░░▀░░░░▀█░░▀▄░░░░░█▀▀░██░░
    ░██▄▀██▄█░░░▄░░░░░░░██░░░░▀▀▀▀▀░░░░██░░
    ░░▀██▄▀██░░░░░░░░▀░██▀░░░░░░░░░░░░░▀██░
    ░░░░▀████░▀░░░░▄░░░██░░░▄█░░░░▄░▄█░░██░
    ░░░░░░░▀█░░░░▄░░░░░██░░░░▄░░░▄░░▄░░░██░
    ░░░░░░░▄█▄░░░░░░░░░░░▀▄░░▀▀▀▀▀▀▀▀░░▄▀░░
    ░░░░░░█▀▀█████████▀▀▀▀████████████▀░░░░
    ░░░░░░████▀░░███▀░░░░░░▀███░░▀██▀░░░░░░
    ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
**/

#include <string>
#include <map>

using namespace std;

enum CommandType {
    R,
    I,
    S,
    B,
    U,
    J,
    Fence,
    FenceI,
    Unknown
};

map<CommandType, int> lastBitInImm = {
        {I, 11},
        {S, 11},
        {B, 12},
        {J, 20},
        {U, 31}
};

map<string, CommandType> commandToType = {
        {"LUI", U},
        {"AUIPC", U},
        {"JAL", J},
        {"JALR", I},
        {"BEQ", B},
        {"BNE", B},
        {"BLT", B},
        {"BGE", B},
        {"BLTU", B},
        {"BGEU", B},
        {"LB", I},
        {"LH", I},
        {"LW", I},
        {"LBU", I},
        {"LHU", I},
        {"SB", S},
        {"SH", S},
        {"SW", S},
        {"ADDI", I},
        {"SLTI", I},
        {"SLTIU", I},
        {"XORI", I},
        {"ORI", I},
        {"ANDI", I},
        {"SLLI", I},
        {"SRLI", I},
        {"SRAI", I},
        {"ADD", R},
        {"SUB", R},
        {"SLL", R},
        {"SLT", R},
        {"SLTU", R},
        {"XOR", R},
        {"SRL", R},
        {"SRA", R},
        {"OR", R},
        {"AND", R},
        {"FENCE", Fence},
        {"FENCE.I", FenceI},
        {"ECALL", I},
        {"EBREAK", I},
        {"CSRRW", I},
        {"CSRRS", I},
        {"CSRRC", I},
        {"CSRRWI", I},
        {"CSRRSI", I},
        {"CSRRCI", I},
        {"MUL", R},
        {"MULH", R},
        {"MULHSU", R},
        {"MULHU", R},
        {"DIV", R},
        {"DIVU", R},
        {"REM", R},
        {"REMU", R}
};

map<string, string> commandToOpcode = {
        {"LUI", "0110111"},
        {"AUIPC", "0010111"},
        {"JAL", "1101111"},
        {"JALR", "1100111"},
        {"BEQ", "1100011"},
        {"BNE", "1100011"},
        {"BLT", "1100011"},
        {"BGE", "1100011"},
        {"BLTU", "1100011"},
        {"BGEU", "1100011"},
        {"LB", "0000011"},
        {"LH", "0000011"},
        {"LW", "0000011"},
        {"LBU", "0000011"},
        {"LHU", "0000011"},
        {"SB", "0100011"},
        {"SH", "0100011"},
        {"SW", "0100011"},
        {"ADDI", "0010011"},
        {"SLTI", "0010011"},
        {"SLTIU", "0010011"},
        {"XORI", "0010011"},
        {"ORI", "0010011"},
        {"ANDI", "0010011"},
        {"SLLI", "0010011"},
        {"SRLI", "0010011"},
        {"SRAI", "0010011"},
        {"ADD", "0110011"},
        {"SUB", "0110011"},
        {"SLL", "0110011"},
        {"SLT", "0110011"},
        {"SLTU", "0110011"},
        {"XOR", "0110011"},
        {"SRL", "0110011"},
        {"SRA", "0110011"},
        {"OR", "0110011"},
        {"AND", "0110011"},
        {"FENCE", "0001111"},
        {"FENCE.I", "0001111"},
        {"ECALL", "1110011"},
        {"EBREAK", "1110011"},
        {"CSRRW", "1110011"},
        {"CSRRS", "1110011"},
        {"CSRRC", "1110011"},
        {"CSRRWI", "1110011"},
        {"CSRRSI", "1110011"},
        {"CSRRCI", "1110011"},
        {"MUL", "0110011"},
        {"MULH", "0110011"},
        {"MULHSU", "0110011"},
        {"MULHU", "0110011"},
        {"DIV", "0110011"},
        {"DIVU", "0110011"},
        {"REM", "0110011"},
        {"REMU", "0110011"}
};

map<string, string> commandToFunct7 = {
        {"SLLI", "0000000"},
        {"SRLI", "0000000"},
        {"SRAI", "0100000"},
        {"ADD", "0000000"},
        {"SUB", "0100000"},
        {"SLL", "0000000"},
        {"SLT", "0000000"},
        {"SLTU", "0000000"},
        {"XOR", "0000000"},
        {"SRL", "0000000"},
        {"SRA", "0100000"},
        {"OR", "0000000"},
        {"AND", "0000000"},
        {"MUL", "0000001"},
        {"MULH", "0000001"},
        {"MULHSU", "0000001"},
        {"MULHU", "0000001"},
        {"DIV", "0000001"},
        {"DIVU", "0000001"},
        {"REM", "0000001"},
        {"REMU", "0000001"}
};

map<string, string> commandToFunct3 = {
        {"JALR", "000"},
        {"BEQ", "000"},
        {"BNE", "001"},
        {"BLT", "100"},
        {"BGE", "101"},
        {"BLTU", "110"},
        {"BGEU", "111"},
        {"LB", "000"},
        {"LH", "001"},
        {"LW", "010"},
        {"LBU", "100"},
        {"LHU", "101"},
        {"SB", "000"},
        {"SH", "001"},
        {"SW", "010"},
        {"ADDI", "000"},
        {"SLTI", "010"},
        {"SLTIU", "011"},
        {"XORI", "100"},
        {"ORI", "110"},
        {"ANDI", "111"},
        {"SLLI", "001"},
        {"SRLI", "101"},
        {"SRAI", "101"},
        {"ADD", "000"},
        {"SUB", "000"},
        {"SLL", "001"},
        {"SLT", "010"},
        {"SLTU", "011"},
        {"XOR", "100"},
        {"SRL", "101"},
        {"SRA", "101"},
        {"OR", "110"},
        {"AND", "111"},
        {"FENCE", "000"},
        {"FENCE.I", "001"},
        {"ECALL", "000"},
        {"EBREAK", "000"},
        {"CSRRW", "001"},
        {"CSRRS", "010"},
        {"CSRRC", "011"},
        {"CSRRWI", "101"},
        {"CSRRSI", "110"},
        {"CSRRCI", "111"},
        {"MUL", "000"},
        {"MULH", "001"},
        {"MULHSU", "010"},
        {"MULHU", "011"},
        {"DIV", "100"},
        {"DIVU", "101"},
        {"REM", "110"},
        {"REMU", "111"}
};

string toBin(int value) {
    string binRender;

    while (value) {
        binRender = char(value % 2 + '0') + binRender;

        value /= 2;
    }

    while (binRender.size() < 5) {
        binRender = '0' + binRender;
    }

    return binRender;
}

map<string, string> asmRegisterToBinRegister = {
        {"zero", toBin(0)},
        {"ra", toBin(1)},
        {"sp", toBin(2)},
        {"gp", toBin(3)},
        {"tp", toBin(4)},
        {"t0", toBin(5)},
        {"t1", toBin(6)},
        {"t2", toBin(7)},
        {"s0", toBin(8)},
        {"fp", toBin(8)},
        {"s1", toBin(9)},
        {"a0", toBin(10)},
        {"a1", toBin(11)},
        {"a2", toBin(12)},
        {"a3", toBin(13)},
        {"a4", toBin(14)},
        {"a5", toBin(15)},
        {"a6", toBin(16)},
        {"a7", toBin(17)},
        {"s2", toBin(18)},
        {"s3", toBin(19)},
        {"s4", toBin(20)},
        {"s5", toBin(21)},
        {"s6", toBin(22)},
        {"s7", toBin(23)},
        {"s8", toBin(24)},
        {"s9", toBin(25)},
        {"s10", toBin(26)},
        {"s11", toBin(27)},
        {"t3", toBin(28)},
        {"t4", toBin(29)},
        {"t5", toBin(30)},
        {"t6", toBin(31)},
};

map<string, int> asmRegisterToIndexRegister = {
        {"zero", 0},
        {"ra", 1},
        {"sp", 2},
        {"gp", 3},
        {"tp", 4},
        {"t0", 5},
        {"t1", 6},
        {"t2", 7},
        {"s0", 8},
        {"fp", 8},
        {"s1", 9},
        {"a0", 10},
        {"a1", 11},
        {"a2", 12},
        {"a3", 13},
        {"a4", 14},
        {"a5", 15},
        {"a6", 16},
        {"a7", 17},
        {"s2", 18},
        {"s3", 19},
        {"s4", 20},
        {"s5", 21},
        {"s6", 22},
        {"s7", 23},
        {"s8", 24},
        {"s9", 25},
        {"s10", 26},
        {"s11", 27},
        {"t3", 28},
        {"t4", 29},
        {"t5", 30},
        {"t6", 31},
};